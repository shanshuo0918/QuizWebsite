package quiz;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;

import database.DBConnection;

public class MultiChoiceMultiAnswer extends Question {
	protected final String choices;
	
	public MultiChoiceMultiAnswer(String questionType, String questionID) {
		super(questionType, questionID);
		String query = "SELECT * FROM " + questionTypeTable + " WHERE questionID = \"" + questionID + "\"";
		String tempChoices = "";
		try {
			Connection con = DBConnection.getConnection();
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(query);
			rs.next();
			tempChoices = rs.getString(7);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		this.choices = tempChoices;
	}
	
	public MultiChoiceMultiAnswer(String quizID, int timeLimit,
			String question, String answer, int score, String choices) {
		super("MCMA", quizID, timeLimit, question, answer, score);
		this.choices = choices;
	}
	
	@Override
	public int getScore(String userAnswer) {
		ArrayList<String> userAnswerList = getArrayList(userAnswer);
		ArrayList<String> answerList = getAnswerList();
		int correct = 0;
		for (int i = 0; i < userAnswerList.size(); i ++) {
			if (answerList.contains(userAnswerList.get(i))) {
				correct ++;
			} else {
				correct --;
			}
		}
		return Math.max(0, correct) * score;
	}
	
	@Override
	public String getUserAnswer(HttpServletRequest request) {
		String[] userAnswer = request.getParameterValues("answer_"+ questionID);
		String result = "";
		if (userAnswer == null) {
			return result;
		}
		for (int i = 0; i < userAnswer.length - 1; i++) {
			result += userAnswer[i];
			result += "|";
		}
		result += userAnswer[userAnswer.length - 1];
		return result;
	}
	
	@Override
	public String doQuizPage() {
		StringBuilder page = new StringBuilder();
		ArrayList<String> choiceList = getChoiceList();
		page.append("This is a Multiple-Choice-Multiple-Answer question, you may select one or more options!");
		page.append("<h4>Question: " + question + "</h4>");
		//page.append("<form>");
		for (int i = 0; i < choiceList.size(); i ++) {
			page.append("<input type=\"checkbox\" name=\"answer_" + questionID + "\" value=\"" + choiceList.get(i) + "\"/> " + choiceList.get(i) + " <br>");
		}
		//page.append("</form>");
		return page.toString();
	}
	
	
	// Not tested
	protected ArrayList<String> getChoiceList() {
		ArrayList<String> choiceList = new ArrayList<String>();
		int start = 0;
		int end = 0;
		while (end < choices.length() - 1) {
			if (choices.charAt(end) == '|') {
				choiceList.add(choices.substring(start, end));
				start = end + 1;
			}
			end ++;
		}
		choiceList.add(choices.substring(start));
		return choiceList;
	}	
	
	protected ArrayList<String> getArrayList(String str) {
		ArrayList<String> list = new ArrayList<String>();
		int start = 0;
		int end = 0;
		while (end < str.length() - 1) {
			if (str.charAt(end) == '|') {
				list.add(str.substring(start, end));
				start = end + 1;
			}
			end ++;
		}
		list.add(str.substring(start));
		return list;
	}
	
}