package quiz;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;

import javax.servlet.http.HttpServletRequest;

import database.DBConnection;

public class Matching extends Question {
	protected final int numOfOptions;
	protected final String choices;
	
	public Matching(String questionType, String questionID) {
		super(questionType, questionID);
		String query = "SELECT * FROM " + questionTypeTable + " WHERE questionID = \"" + questionID + "\"";
		int tempNumOfOptions = 0;
		String tempChoices = "";
		
		try {
			Connection con = DBConnection.getConnection();
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(query);
			rs.next();
			tempNumOfOptions = rs.getInt(7);
			tempChoices = rs.getString(8);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		this.choices = tempChoices;
		this.numOfOptions = tempNumOfOptions;
	}
	
	public Matching(String quizID, int timeLimit,
			String question, String answer, int score, int numOfOptions, String choices) {
		super("MATCH" , quizID, timeLimit, question, answer, score);
		this.numOfOptions = numOfOptions;
		this.choices = choices;
	}
	
	public int getScore() {
		return 0;
	}
	
	@Override
	public int getMaxScore() {
		return score * numOfOptions;
	}
	
	@Override
	public void addQuestion() {
		String query = "INSERT INTO " + questionTypeTable + " VALUES(\"" + questionID + "\", \"" + quizID +
				"\", \"" + timeLimit + "\", \"" + question + "\", \"" + answer + "\", \"" + score + 
				"\", " + numOfOptions + ", \"" + choices + "\");";
		System.out.println(query);
		try {
			Connection con = DBConnection.getConnection();
			Statement stmt = con.createStatement();
			stmt.executeUpdate(query);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	@Override
	public String doQuizPage() {
		StringBuilder page = new StringBuilder();
		ArrayList<String> answerList = getAnswerList();
		ArrayList<String> choiceList = getChoiceList();
		Collections.shuffle(answerList);
		page.append("This is a Matching question, please match each statement on the left to the options on the right!");
		page.append("<h4>Question: " + question + "</h4>");
		for (int i = 0; i < answerList.size(); i++ ) {
			page.append(choiceList.get(i) + "\t\t" + answerList.get(i) + "<br>");
		}
		return page.toString();
	}
	
	@Override
	public void updateQuestion(HttpServletRequest request) {
		String question = request.getParameter("questionDescription");
		String answer = QuestionHelper.generateAnswers(request);
		String options = QuestionHelper.generateOptions(request);
		int timeLimit = 0;
		if (request.getParameter("time") != "") {
			timeLimit = Integer.parseInt(request.getParameter("time"));
		}
		int numOfOptions = QuestionHelper.countNumOfAns(answer);
		
		String query = "Update " + questionTypeTable + " SET question = \"" + question + "\", answer = \"" + answer +
				"\", timeLimit = \"" + timeLimit + "\", numOfOptions = " + numOfOptions + ", options = \"" + options +  
				"\" WHERE questionID = \"" + questionID + "\";";
		System.out.println(query);
		try {
			Connection con = DBConnection.getConnection();
			Statement stmt = con.createStatement();
			stmt.executeUpdate(query);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	
	@Override
	public String editQuestionPage() {
		StringBuilder page = new StringBuilder();
		page.append("<h3>You are creating a Multiple-Answer question!</h3>\n");
		page.append("Question (Please type your question in the textAera below): <br>");
		page.append("<textarea name=\"questionDescription\" rows=\"10\" cols=\"60\" required></textarea><br>");
		page.append("Anwser (If you have mutiple possible anwsers, please put them in different line): <br>");
		
		page.append("<input type=\"text\" name=\"option1\"/>--<input type=\"text\" name=\"answer1\"/><br>");
		page.append("<input type=\"text\" name=\"option2\"/>--<input type=\"text\" name=\"answer2\"/><br>");
		page.append("<input type=\"text\" name=\"option3\"/>--<input type=\"text\" name=\"answer3\"/><br>");
		page.append("<input type=\"text\" name=\"option4\"/>--<input type=\"text\" name=\"answer4\"/><br>");
		page.append("<input type=\"text\" name=\"option5\"/>--<input type=\"text\" name=\"answer5\"/><br>");
		
		page.append("Time Limit (If you wish to create a limit time question, please provide the time limit): "
				+ "<input type=\"text\" name=\"time\" value =\"" + timeLimit + "\"><br>");
		return page.toString();
	}
	
	protected ArrayList<String> getChoiceList() {
		ArrayList<String> choiceList = new ArrayList<String>();
		int start = 0;
		int end = 0;
		while (end < choices.length() - 1) {
			if (choices.charAt(end) == '|') {
				System.out.println(start);
				System.out.println(end);
				choiceList.add(choices.substring(start, end));
				start = end + 1;
			}
			end ++;
		}
		choiceList.add(choices.substring(start));
		return choiceList;
	}
	
}